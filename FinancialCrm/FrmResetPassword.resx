<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>